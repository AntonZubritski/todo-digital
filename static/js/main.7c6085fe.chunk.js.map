{"version":3,"sources":["services/generateId.js","redux/reducer.js","redux/store.js","redux/constants.js","redux/actions.js","services/api-services.js","components/modal/index.js","components/modal/modal.js","components/add-posts/index.js","components/add-posts/add-posts.js","components/table/index.js","components/table/table.js","components/app/index.js","components/app/app.js","index.js"],"names":["timestamp","Date","generateId","min","max","parts","toString","split","reverse","id","i","length","Math","floor","random","initialStateTodo","posts","visible","jsonAmount","initialStateChange","addform","title","body","edit","reducers","combineReducers","todo","state","action","type","payload","amount","filter","el","map","change","name","post","store","createStore","applyMiddleware","thunk","api","_urlBase","templateFetch","url","method","a","fetch","JSON","stringify","headers","res","ok","Error","status","json","templatePostsFetch","_transformPosts","fetchApi","getPosts","setPost","deletePost","putPost","key","PutPostTable","DeleteInfoPost","UpdatePosts","UpdateInfo","AddArticlesErr","DeleteAddForm","SwitchVisible","ModalForm","connect","dispatch","bool","actions","ChangeAddForm","ChangeEditForm","SetPost","then","catch","err","message","PutPost","indexOf","props","Form","useForm","form","useEffect","setFieldsValue","changeInputForm","e","target","value","DataModal","dataToPassIn","modal","Modal","success","content","setTimeout","destroy","onCancel","resetFields","footer","forceRender","onFinish","span","Item","label","rules","required","onChange","preserve","placeholder","allowClear","TextArea","rows","justify","htmlType","AddPosts","undefined","orientation","style","padding","onClick","PlusOutlined","TableForm","GetPosts","DeletePost","EditAddForm","EditMode","columns","dataIndex","render","size","EditButton","EditOutlined","DeleteButton","DeleteOutlined","sourceData","width","pagination","dataSource","App","Component","ReactDOM","bind","document","getElementById"],"mappings":"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","file":"static/js/main.7c6085fe.chunk.js","sourcesContent":["const length = 5;\nlet timestamp = +new Date();\n\nconst _getRandomInt = function( min, max ) {\n return Math.floor( Math.random() * ( max - min + 1 ) ) + min;\n}\n\nconst generateId = () => {\n  const ts = timestamp.toString();\n  const parts = ts.split( \"\" ).reverse();\n  let id = \"\";\n  \n  for( let i = 0; i < length; ++i ) {\n   const index = _getRandomInt( 0, parts.length - 1 );\n   id += parts[index];\t \n  }\n  \n  return id;;\n}\nexport default generateId","import * as constants from './constants'\nimport generateId from '../services/generateId'\n\nconst initialStateTodo = {\n  posts: false,\n  visible: false,\n  jsonAmount: null,\n}\nconst initialStateChange = {\n  addform: {\n    title: null,\n    body: null,\n  },\n  edit: false,\n}\n\nconst todoReducer = (state = initialStateTodo, action) => {\n  switch (action.type) {\n    case constants.UPDATE_INFO:\n      return { ...state, posts: action.payload, jsonAmount: action.amount }\n    case constants.SWITCH_VISIBLE:\n      return { ...state, visible: action.payload }\n    case constants.UPDATE_POSTS:\n      return { ...state, posts: [...state.posts, action.payload] }\n    case constants.DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((el) => el.id !== action.id),\n      }\n    case constants.PUT_POST:\n      return {\n        ...state,\n        posts: state.posts.map((el) =>\n          el.id === action.body.id ? action.body : el\n        ),\n      }\n    default:\n      return state\n  }\n}\nconst changeReducer = (state = initialStateChange, action) => {\n  switch (action.type) {\n    case constants.CHANGE_ADD_FORM:\n      return {\n        ...state,\n        addform: {\n          ...state.addform,\n          [action.name]: action.payload,\n          id: generateId(),\n          key: `${generateId()}-${action.payload}`,\n        },\n      }\n    case constants.CHANGE_EDIT_FORM:\n      return {\n        ...state,\n        addform: {\n          ...state.addform,\n          [action.name]: action.payload,\n        },\n      }\n    case constants.EDIT_MODE:\n      return { ...state, edit: true }\n    case constants.EDIT_ADD_FORM:\n      return { ...state, addform: action.post }\n    case constants.DELETE_ADD_FORM:\n      return { ...initialStateChange }\n    default:\n      return state\n  }\n}\n\nexport { todoReducer, changeReducer }\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport { todoReducer, changeReducer } from './reducer'\nimport thunk from 'redux-thunk'\n\nconst reducers = combineReducers({\n  todo: todoReducer,\n  change: changeReducer,\n})\nconst store = createStore(reducers, applyMiddleware(thunk))\nexport default store\n","const UPDATE_INFO = 'UPDATE_INFO'\nconst ADD_ARTICLES_ERROR = 'ADD_ARTICLES_ERROR'\nconst SWITCH_VISIBLE = 'SWITCH_VISIBLE'\nconst CHANGE_ADD_FORM = 'CHANGE_ADD_FORM'\nconst UPDATE_POSTS = 'UPDATE_POSTS'\nconst DELETE_ADD_FORM = 'DELETE_ADD_FORM'\nconst DELETE_POST = 'DELETE_POST'\nconst PUT_POST = 'PUT_POST'\nconst EDIT_ADD_FORM = 'EDIT_ADD_FORM'\nconst CHANGE_EDIT_FORM = 'CHANGE_EDIT_FORM'\nconst EDIT_MODE = 'EDIT_MODE'\n\nexport {\n  UPDATE_INFO,\n  ADD_ARTICLES_ERROR,\n  SWITCH_VISIBLE,\n  CHANGE_ADD_FORM,\n  UPDATE_POSTS,\n  DELETE_ADD_FORM,\n  DELETE_POST,\n  EDIT_ADD_FORM,\n  CHANGE_EDIT_FORM,\n  EDIT_MODE,\n  PUT_POST,\n}\n","import ApiServices from '../services/api-services'\nimport {\n  UPDATE_INFO,\n  ADD_ARTICLES_ERROR,\n  SWITCH_VISIBLE,\n  CHANGE_ADD_FORM,\n  UPDATE_POSTS,\n  DELETE_ADD_FORM,\n  DELETE_POST,\n  EDIT_ADD_FORM,\n  CHANGE_EDIT_FORM,\n  EDIT_MODE,\n  PUT_POST,\n} from './constants'\n\nconst api = new ApiServices()\n\nexport const GetPosts = () => {\n  return (dispatch) => {\n    api.fetchApi\n      .getPosts()\n      .then((posts) => {\n        dispatch(\n          UpdateInfo(\n            posts,\n            posts.map((post) => post.id)\n          )\n        )\n      })\n      .catch((err) => {\n        dispatch(AddArticlesErr(err.message))\n      })\n  }\n}\nexport const SetPost = (body) => {\n  return (dispatch) => {\n    api.fetchApi\n      .setPost(body)\n      .then((post) => {\n        dispatch(UpdatePosts(post))\n        dispatch(DeleteAddForm())\n        dispatch(SwitchVisible())\n      })\n      .catch((err) => {\n        dispatch(AddArticlesErr(err.message))\n      })\n  }\n}\n\nexport const DeletePost = (id, jsonAmount) => {\n  if (jsonAmount.indexOf(id) !== -1) {\n    return (dispatch) => {\n      api.fetchApi\n        .deletePost(id)\n        .then(() => {\n          dispatch(DeleteInfoPost(id))\n        })\n        .catch((err) => {\n          dispatch(AddArticlesErr(err.message))\n        })\n    }\n  } else {\n    return (dispatch) => {\n      dispatch(DeleteInfoPost(id))\n    }\n  }\n}\nexport const PutPost = (body, jsonAmount) => {\n  if (jsonAmount.indexOf(body.id) !== -1) {\n    return (dispatch) => {\n      api.fetchApi\n        .putPost(body)\n        .then((post) => {\n          dispatch(PutPostTable(post))\n          dispatch(DeleteAddForm())\n        })\n        .catch((err) => {\n          dispatch(AddArticlesErr(err.message))\n        })\n    }\n  } else {\n    return (dispatch) => {\n      dispatch(PutPostTable(body))\n      dispatch(DeleteAddForm())\n    }\n  }\n}\nconst PutPostTable = (body) => ({\n  type: PUT_POST,\n  body,\n})\nconst DeleteInfoPost = (id) => ({\n  type: DELETE_POST,\n  id,\n})\nconst UpdatePosts = (payload) => ({\n  type: UPDATE_POSTS,\n  payload,\n})\nconst UpdateInfo = (payload, amount) => ({\n  type: UPDATE_INFO,\n  payload,\n  amount,\n})\nconst AddArticlesErr = (payload) => ({\n  type: ADD_ARTICLES_ERROR,\n  payload,\n})\nexport const DeleteAddForm = () => ({\n  type: DELETE_ADD_FORM,\n})\nexport const SwitchVisible = (payload) => ({\n  type: SWITCH_VISIBLE,\n  payload,\n})\nexport const ChangeAddForm = (name, payload, length) => ({\n  type: CHANGE_ADD_FORM,\n  name,\n  length,\n  payload,\n})\nexport const ChangeEditForm = (name, payload) => ({\n  type: CHANGE_EDIT_FORM,\n  name,\n  payload,\n})\nexport const EditAddForm = (post) => ({\n  type: EDIT_ADD_FORM,\n  post,\n})\nexport const EditMode = (post) => ({\n  type: EDIT_MODE,\n  post,\n})\n","export default class ApiServices {\n  _urlBase = 'https://my-json-server.typicode.com/antonzubritski/digitaldb'\n\n  //-------------Template for fetchApi\n  templateFetch = async (url, method, body) => {\n    const res = await fetch(url, {\n      method: method,\n      body: JSON.stringify(body),\n      headers: { 'Content-Type': 'application/json' },\n    })\n    if (!res.ok) {\n      throw new Error(`Could not fetch, received ${res.status}`)\n    }\n    return res.json()\n  }\n  templatePostsFetch = async (url, method, body) => {\n    const res = await this.templateFetch(url, method, body)\n    return res.map(this._transformPosts)\n  }\n  //-------------Template for fetchApi END\n\n  fetchApi = {\n    getPosts: () => {\n      return this.templatePostsFetch(`${this._urlBase}/posts`, 'GET')\n    },\n    setPost: (body) => {\n      return this.templateFetch(`${this._urlBase}/posts`, 'POST', body)\n    },\n    deletePost: (id) => {\n      return this.templateFetch(`${this._urlBase}/posts/${id}`, 'DELETE')\n    },\n    putPost: (body) => {\n      return this.templateFetch(\n        `${this._urlBase}/posts/${body.id}`,\n        'PUT',\n        body\n      )\n    },\n  }\n\n  //------Transform Function\n  _transformPosts = (post) => {\n    return {\n      id: post.id,\n      key: `${post.id}-${Math.floor(Math.random() * Math.floor(100))}`,\n      title: post.title,\n      body: post.body,\n    }\n  }\n  //------Transform Function END\n}\n","import ModalForm from './modal'\nexport default ModalForm","import React, { useEffect } from 'react'\nimport { Button, Row, Col, Modal, Form, Input } from 'antd'\nimport * as actions from '../../redux/actions'\nimport { connect } from 'react-redux'\n\nconst ModalForm = (props) => {\n  const [form] = Form.useForm()\n\n  useEffect(() => form.setFieldsValue(addform), [props.addform])\n\n  const {\n    ChangeAddForm,\n    ChangeEditForm,\n    posts,\n    SwitchVisible,\n    visible,\n    addform,\n    SetPost,\n    PutPost,\n    DeleteAddForm,\n    edit,\n    jsonAmount,\n  } = props\n\n  const changeInputForm = (e) => {\n    const { id, value } = e.target\n    return edit\n      ? ChangeEditForm(id, value)\n      : ChangeAddForm(id, value, posts.length)\n  }\n  const setPost = (e) => {\n    SwitchVisible(false)\n    DataModal('Added post!')\n    return edit ? PutPost(addform, jsonAmount) : SetPost(addform)\n  }\n  const cancelButton = () => {\n    SwitchVisible(false)\n    form.resetFields()\n    DeleteAddForm()\n  }\n  const DataModal = (dataToPassIn) => {\n    const modal = Modal.success({\n      title: 'SUCCES',\n      content: <div>{dataToPassIn}</div>,\n    })\n    setTimeout(() => {\n      modal.destroy()\n    }, 1000)\n  }\n\n  return (\n    <Modal\n      title=\"ADD POST\"\n      visible={visible}\n      onCancel={cancelButton}\n      footer={null}\n      forceRender={true}\n    >\n      <Form form={form} onFinish={setPost}>\n        <Col span={24}>\n          <Form.Item\n            name=\"title\"\n            label=\"Title\"\n            rules={[{ required: true, message: 'Please enter title post' }]}\n            onChange={changeInputForm}\n            preserve={false}\n          >\n            <Input placeholder=\"Please enter title post\" allowClear={true} />\n          </Form.Item>\n        </Col>\n        <Col span={24}>\n          <Form.Item\n            name=\"body\"\n            label=\"Body\"\n            rules={[\n              {\n                required: true,\n                message: 'please enter body post',\n              },\n            ]}\n            onChange={changeInputForm}\n          >\n            <Input.TextArea\n              rows={4}\n              placeholder=\"please enter body post\"\n              allowClear={true}\n            />\n          </Form.Item>\n        </Col>\n        <Row justify=\"space-around\">\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\" key=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n        </Row>\n      </Form>\n    </Modal>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.todo.posts,\n    visible: state.todo.visible,\n    addform: state.change.addform,\n    edit: state.change.edit,\n    jsonAmount: state.todo.jsonAmount,\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    SwitchVisible: (bool) => dispatch(actions.SwitchVisible(bool)),\n    ChangeAddForm: (name, payload, length) =>\n      dispatch(actions.ChangeAddForm(name, payload, length)),\n    ChangeEditForm: (name, payload) =>\n      dispatch(actions.ChangeEditForm(name, payload)),\n    SetPost: (body, length) => dispatch(actions.SetPost(body, length)),\n    PutPost: (body, jsonAmount) => dispatch(actions.PutPost(body, jsonAmount)),\n    DeleteAddForm: () => dispatch(actions.DeleteAddForm()),\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalForm)\n","import AddPosts from './add-posts'\n\nexport default AddPosts\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport ModalForm from '../modal'\nimport * as actions from '../../redux/actions'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { Button, Row, Col, Divider } from 'antd'\nimport './add-posts.css'\nimport 'antd/dist/antd.css'\n\nconst AddPosts = (props) => {\n  const modalCss = { padding: '8px 0' }\n  const { SwitchVisible } = props\n\n  return (\n    <Row justify=\"center\">\n      <Divider orientation=\"left\">AntonZubritski</Divider>\n      <Col style={modalCss}>\n        <Button type=\"primary\" onClick={() => SwitchVisible(true)}>\n          <PlusOutlined /> ADD POST\n        </Button>\n      </Col>\n      <ModalForm />\n    </Row>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    SwitchVisible: (bool) => dispatch(actions.SwitchVisible(bool)),\n  }\n}\n\nexport default connect(undefined, mapDispatchToProps)(AddPosts)\n\n\n\n\n\n\n\n","import TableForm from './table'\n\nexport default TableForm","import React, { useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport * as actions from '../../redux/actions'\nimport 'antd/dist/antd.css'\nimport { Row, Space, Spin } from 'antd'\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons'\nimport { Table } from 'antd'\n\nconst TableForm = (props) => {\n  const {\n    DeletePost,\n    EditAddForm,\n    jsonAmount,\n    SwitchVisible,\n    EditMode,\n    GetPosts,\n  } = props\n  const tableCss = { padding: '50px 0', width: '80%' }\n  const spinCss = { padding: '100px 0' }\n\n  useEffect(() => {\n    GetPosts()\n  }, [])\n\n  const EditButton = (post) => {\n    EditMode()\n    EditAddForm(post)\n    SwitchVisible(true)\n  }\n\n  const DeleteButton = (post) => {\n    DeletePost(post.id, jsonAmount)\n  }\n  \n  const columns = [\n    { title: 'Id', dataIndex: 'id', key: 'id' },\n    { title: 'Title', dataIndex: 'title', key: 'title' },\n    { title: 'Body', dataIndex: 'body', key: 'body' },\n    {\n      title: 'Action',\n      dataIndex: '',\n      key: 'x',\n      render: (post) => (\n        <Space size=\"middle\">\n          <a onClick={() => EditButton(post)}>\n            <EditOutlined />\n          </a>\n          <a onClick={() => DeleteButton(post)}>\n            <DeleteOutlined />\n          </a>\n        </Space>\n      ),\n    },\n  ]\n\n  const sourceData = props.posts ? (\n    <Table\n      style={tableCss}\n      columns={columns}\n      pagination={true}\n      dataSource={props.posts}\n    />\n  ) : (\n    <Spin style={spinCss} />\n  )\n\n  return <Row justify=\"center\">{sourceData}</Row>\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    posts: state.todo.posts,\n    jsonAmount: state.todo.jsonAmount,\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    SwitchVisible: (bool) => dispatch(actions.SwitchVisible(bool)),\n    GetPosts: () => dispatch(actions.GetPosts()),\n    DeletePost: (id, jsonAmount) =>\n      dispatch(actions.DeletePost(id, jsonAmount)),\n    EditAddForm: (post) => dispatch(actions.EditAddForm(post)),\n    EditMode: () => dispatch(actions.EditMode()),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TableForm)\n","import App from './app'\r\n\r\nexport default App\r\n","import React, { Component } from 'react'\r\nimport './app.css'\r\nimport 'antd/dist/antd.css'\r\nimport AddPosts from '../add-posts'\r\nimport TableForm from '../table'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <AddPosts />\r\n        <TableForm />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport store from './redux/store'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App store={store} dispatch={store.dispatch.bind(store)} />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}